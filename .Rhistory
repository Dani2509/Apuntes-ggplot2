install.packages("ggplot2")
library(ggplot2)
str(iris)
#Parte 1. Abriendo base de datos
install.packages("palmerpenguins")
library(palmerpenguins)
library(ggplot2)
datos<-na.omit(penguins)
datos
str(datos)
#Parte 2 y 3. Cree un grafico base para relacionar las varibles
#largo y profundidad del pico y se agrega color por especie
ggplot(data = datos,mapping =aes(x = bill_length_mm, y = bill_depth_mm, colour= species ))+geom_point()
#Parte 4. Marque la tendencia
ggplot(data = datos,mapping =aes(x = bill_length_mm, y =  bill_depth_mm, colour= species ))+
geom_point(size = 2) + geom_smooth(method = "lm", se = FALSE)
library(dyplr)
install.packages("dyplr")
library(dyplr)
library(tidyverse)
# funcion select
library(diamonds)
# funcion select
install.packages("diamonds")
diamonds
select(diamonds, carat,cut,price) # esta es una forma, la otra es usando %>%
diamonds %>% select(carat,cut,price)
#podemos quitar columnas
diamonds %>% select(-cut,-price)
# TambiÃ©n por posiciones de columnas
diamonds %>% select(2,7)
# seleccionar columnas que empiezen con una letra
diamonds %>% select(starts_with("c"))
#seleccionar solo columnas numericas
diamonds %>% select_if(is.numeric())
#seleccionar solo columnas numericas
diamonds %>% select_if(is.numeric)
# Filter
diamonds %>% filter(price>500)
#para agregar varias condiciones
diamonds %>% filter(price>500 & cut=="Ideal")
diamonds %>% filter(price>500, cut=="Ideal")
#rename
diamonds %>% rename(price=precio)
#rename
diamonds %>% rename(precio=price)
#rename
diamonds %>% rename(precio=price, corte=cut)
#transform modifica una columna existente y mutate agrega columnas nuevas
str(diamonds)
diamonds %>% transform(clarity=as.character(clarity))
library(ggplot2)
library(tidyverse)
#Abriendo base de datos
datos<- read.csv2( "Maize1.csv"  , header = TRUE)
str(datos)
dir()
library(esquisse)
library(tidyverse)
library(modeldata)
# Libreria esquisse
install.packages("esquisse")
install.packages("modeldata")
library(esquisse)
library(modeldata)
